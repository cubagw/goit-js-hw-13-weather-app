{"version":3,"sources":["webpack:///./weatherMarkup.hbs","webpack:///./getGeoPosition.js","webpack:///./fetchWeather.js","webpack:///./index.js"],"names":["Handlebars","__webpack_require__","module","exports","template","compiler","main","container","depth0","helpers","partials","data","stack1","alias1","lambda","alias2","escapeExpression","current","condition","icon","text","location","name","temp_c","humidity","wind_kph","useData","getGeoPosition","options","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","fetchWeather","fetchOfWeather","city","fetch","baseUrl","then","response","ok","json","Error","statusText","refs","searchForm","document","querySelector","weather","coords","latitude","longitude","weatherContent","weatherMarkup","innerHTML","err","PNotify","alert","addEventListener","e","preventDefault","input","currentTarget","elements","value"],"mappings":"8EAAA,IAAAA,EAAiBC,EAAQ,QAEzBC,EAAAC,SAAAH,EAAA,SAAAA,GAAAI,SAAA,CAAiEC,SAAA,eAAAC,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACjE,IAAAC,EAAAC,EAAAN,EAAAO,OAAAC,EAAAR,EAAAS,iBAEA,oEACAD,EAAAF,EAAA,OAAAD,EAAA,OAAAA,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAM,UAAAN,KAAAO,KAAAP,EAAAJ,IACA,UACAO,EAAAF,EAAA,OAAAD,EAAA,OAAAA,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAM,UAAAN,KAAAQ,KAAAR,EAAAJ,IACA,kCACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAa,SAAAb,GAAAI,EAAAU,KAAAV,EAAAJ,IACA,wCACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAW,OAAAX,EAAAJ,IACA,4CACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAY,SAAAZ,EAAAJ,IACA,kCACAO,EAAAF,EAAA,OAAAD,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAa,SAAAb,EAAAJ,IACA,0CACAO,EAAAF,EAAA,OAAAD,EAAA,OAAAA,EAAA,MAAAJ,IAAAS,QAAAT,GAAAI,EAAAM,UAAAN,KAAAQ,KAAAR,EAAAJ,IACA,eACCkB,SAAA,iHCXcC,EARQ,WACrB,IAAMC,EAAU,CACdC,WAAY,KAEd,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAQJ,MCN/CQ,EAAA,CACbC,eADa,SACEC,GAKb,OAAOC,MAAMC,4EAFG,MAASF,IAEkBG,KAAK,SAAAC,GAC9C,GAAIA,EAASC,GAAI,OAAOD,EAASE,OAEjC,MAAM,IAAIC,MAAJ,yBAAmCH,EAASI,iDCAlDC,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,QAASF,SAASC,cAAc,aAGlCvB,IACGc,KAAK,SAAApB,GACJe,EACGC,eACIhB,EAAS+B,OAAOC,SAFvB,KAEoChC,EAAS+B,OAAOE,WAEjDb,KAAK,SAAA9B,GACJ,IAAM4C,EAAiBC,IAAc7C,GACrCoC,EAAKI,QAAQM,UAAYF,MARjC,MAWS,SAAAG,GACLC,IAAQC,MACN,uEAINb,EAAKC,WAAWa,iBAAiB,SAEjC,SAAiCC,GAC/BA,EAAEC,iBAEF,IAAMC,EAAQF,EAAEG,cAAcC,SAAS5B,KAAK6B,MAE5C/B,EACGC,eAAe2B,GACfvB,KAAK,SAAA9B,GACJ,IAAM4C,EAAiBC,IAAc7C,GACrCoC,EAAKI,QAAQM,UAAYF,IAJ7B,MAMS,WACLI,IAAQC,MAAM","file":"main.422d6c8f37f156864aae.js","sourcesContent":["var Handlebars = require(\"../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, alias1=container.lambda, alias2=container.escapeExpression;\n\n  return \"<h2>Current weather</h2>\\r\\n<img class=\\\"icon\\\" src=\\\"https://\"\n    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.condition : stack1)) != null ? stack1.icon : stack1), depth0))\n    + \"\\\" alt=\\\"\"\n    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.condition : stack1)) != null ? stack1.text : stack1), depth0))\n    + \"\\\" />\\r\\n\\r\\n<p>Location: <span>\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.location : depth0)) != null ? stack1.name : stack1), depth0))\n    + \"</span></p>\\r\\n<p>Temperature: <span>\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.temp_c : stack1), depth0))\n    + \"&#8451;</span></p>\\r\\n<p>Humidity: <span>\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.humidity : stack1), depth0))\n    + \"%</span></p>\\r\\n<p>Wind: <span>\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.wind_kph : stack1), depth0))\n    + \"kph</span></p>\\r\\n<p>Conditions: <span>\"\n    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.condition : stack1)) != null ? stack1.text : stack1), depth0))\n    + \"</span></p>\";\n},\"useData\":true});","'use strict';\r\nconst getGeoPosition = () => {\r\n  const options = {\r\n    maximumAge: 300000,\r\n  };\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  });\r\n};\r\nexport default getGeoPosition;\r\n","export default {\r\n  fetchOfWeather(city) {\r\n    const baseUrl = 'http://api.apixu.com/v1/current.json';\r\n    const myKey = '?key=3106a8f4d1914e2f921142834191507';\r\n    const targetCity = `&q=${city}`;\r\n\r\n    return fetch(baseUrl + myKey + targetCity).then(response => {\r\n      if (response.ok) return response.json();\r\n\r\n      throw new Error(`Error while fetching: ${response.statusText}`);\r\n    });\r\n  },\r\n};\r\n","import './styles.css';\nimport 'pnotify/dist/PNotifyBrightTheme.css';\n\nimport getGeoPosition from './getGeoPosition.js';\nimport fetchWeather from './fetchWeather.js';\nimport weatherMarkup from './weatherMarkup.hbs';\n\nimport PNotify from 'pnotify/dist/es/PNotify.js';\n\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  weather: document.querySelector('#weather'),\n};\n\ngetGeoPosition()\n  .then(location => {\n    fetchWeather\n      .fetchOfWeather(\n        `${location.coords.latitude}, ${location.coords.longitude}`,\n      )\n      .then(data => {\n        const weatherContent = weatherMarkup(data);\n        refs.weather.innerHTML = weatherContent;\n      });\n  })\n  .catch(err => {\n    PNotify.alert(\n      'Нет прав доступа к геопозиции, используйте поиск по имени города.',\n    );\n  });\n\nrefs.searchForm.addEventListener('submit', searchFormSubmitHandler);\n\nfunction searchFormSubmitHandler(e) {\n  e.preventDefault();\n\n  const input = e.currentTarget.elements.city.value;\n\n  fetchWeather\n    .fetchOfWeather(input)\n    .then(data => {\n      const weatherContent = weatherMarkup(data);\n      refs.weather.innerHTML = weatherContent;\n    })\n    .catch(() => {\n      PNotify.alert('Город не найден.');\n    });\n}\n"],"sourceRoot":""}